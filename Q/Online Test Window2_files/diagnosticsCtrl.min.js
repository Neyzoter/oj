define2("services/registrationService services/instructionService directives/testWindowDirectives services/testWindowHelperService services/resourceLoaderService directives/diagnosticsDirective services/testWindowCommonUtils services/sebConnectionService services/urlService services/testWindowConstants".split(" "),function(){angular.module("mettl").register.controller("DiagnosticsCtrl",["$scope","$timeout","$state","$controller","$log","$q","$injector","$window","$http","$sce","RegistrationService",
"InstructionService","TestWindowHelperService","ResourceLoaderService","TestWindowCommonUtils","SEBConnectionService","UrlService","$location","TestWindowConstants",function(a,d,z,h,c,k,t,p,A,B,C,D,E,l,F,q,G,H,u){function I(){var a=k.defer();return A.get(p.conf.getPrServerUrl()+"/ping?_\x3d"+Date.now(),{timeout:3E4})["catch"](function(c){200===c.status?a.resolve():a.reject("mettlServer");return a.promise})}function J(){var a=[];F.sendDataOnAUI()||a.push(I());K&&a.push(L());M&&a.push(N());return k.all(a)}
function L(){var b=k.defer(),e=!1;require2(["plugin/mettl.socket.min","plugin/rLanguage/rLanguage.min"],function(){rLanguageUtil.setSocketParams({mode:"diagnostics"});try{rLanguageUtil.initializeWebSocket(conf.getSimulatorWebSocketServerUrl(),function(){c.info("DiagnosticsCtrl onOpen [R server]")},function(a){c.error("DiagnosticsCtrl onError [R server]. ",a);b.reject("mettlServer")},function(a){c.info("DiagnosticsCtrl onClose [R server]. Data: ",a);e||(c.error("Socket unexpectedly got closed [R server]. Data: ",
a),b.reject("mettlServer"))},function(a){c.info("DiagnosticsCtrl onMessage [R server]. ",a);var f;try{f=JSON.parse(a.data)}catch(d){f=null,c.error("Error in parsing message from websocket [R server]: ",d)}f&&f.type===u.Events.Question.rQuestion.welcomeMsg?(e=!0,rLanguageUtil.closeWebSocketConnection(),b.resolve()):(c.error("Invalid data found in message received [R server]."),b.reject("mettlServer"))})}catch(a){c.error("error raised in initializeWebSocket [R server]",a),b.reject("browserNotSupportedForWebRTC")}},
a.loadingError);return b.promise}function N(){var b=k.defer(),e=!1;require2(["plugin/mettl.socket.min","plugin/meanStack/meanStack.min"],function(){meanStackUtil.setSocketParams({Mode:"diagnostics"});try{meanStackUtil.initializeWebSocket(conf.getMeanStackWebSocketServerUrl(),function(){c.info("DiagnosticsCtrl onOpen [MEAN server]")},function(a){c.error("DiagnosticsCtrl onError [MEAN server]. ",a);b.reject("mettlServer")},function(a){e||(c.info("Socket unexpectedly got closed [MEAN server]. Data: ",
a),b.reject("mettlServer"))},function(a){c.info("DiagnosticsCtrl onMessage [MEAN server]. ",a);var f;try{f=JSON.parse(a.data)}catch(d){f=null,c.error("Error in parsing message from websocket [MEAN server]: ",d)}f&&f.type===u.Events.Question.meanStackQuestion.welcomeMsg?(e=!0,meanStackUtil.closeWebSocketConnection(),b.resolve()):(c.error("Invalid data found in message received [MEAN server]."),b.reject("mettlServer"))})}catch(a){c.error("error raised in initializeWebSocket [MEAN server]",a),b.reject("browserNotSupportedForWebRTC")}},
a.loadingError);return b.promise}function m(){d.cancel(a.slideTimer);d.cancel(a.finalWaitingTimer);a.startCommonSlider=!1}function v(){var b=a.diagnostics.success&&r&&w;g&&(b=b&&a.isRequiredProctoringDataLoaded);return b}function O(){require2(["services/testWindowFactory"],function(){var b=t.get("TestWindowFactory");b.init(a.opts);a.$parent.initialised=!0;a.isAPI?(r=!1,b.load().then(function(){r=!0},a.loadingError)):(C.getCRFs(),D.getTestInstruction())},a.loadingError)}function s(){"NONE"!=x?(m(),
l.preLoadMediaQuestionDiagnosticResource().then(function(){h("DiagnosticsMediaQuestionCtrl",{$scope:a});a.runDiagnostics()},a.loadingError)):a.diagnostics.success=!0}function y(){g&&a.opts.onAppletFallback?(a.progressWidth=a.multiplier*a.index,l.preLoadAdvanceDiagnosticsResource(a.opts.proctoringSettings&&a.opts.proctoringSettings.authorization).then(function(){h("DiagnosticsWebrtcProctoringCtrl",{$scope:a});h("DiagnosticsAdvanceCtrl",{$scope:a});a.initDiagnostics().then(function(){s()},function(b){c.error("Error Occurred in proctoring diagnostics"+
b);a.loadingError})},a.loadingError)):g?l.preLoadWebRTCDiagnosticsResource().then(function(){h("DiagnosticsWebrtcProctoringCtrl",{$scope:a});a.runWebRTCDiagnostics().then(function(){s()},function(b){c.error("Error Occurred in proctoring diagnostics"+b);a.loadingError})},a.loadingError):s()}function P(){a.opts.browserLock?q.establishWebSocketConnectionWithSEB().then(function(){q.checkForForceUpdate().then(function(){q.closeConnectionWithSEB().then(function(){y()},function(b){a.handleDiagError(b,null)})},
function(b){a.handleDiagError(b,null)})},function(b){a.handleDiagError(b,null)}):y()}function Q(){g||(a.startCommonSlider=!a.opts.browserLock||!a.isSystemCheck,a.finalWaitingTimer=d(function(){v()||a.loadingError("timeoutCase")},18E4));a.isSystemCheck||(O(),l.preLoadCommonResources(a.opts).then(function(){t.get("GAService");w=!0},a.loadingError));J().then(function(){c.info("All Mettl servers working.");P()},function(b){a.handleDiagError(b,null)})}var g=a.opts.visualProctoring,K=a.opts.hasRLanguageQuestion,
M=a.opts.hasMeanStackQuestion,x=a.opts.mediaQuestionType,n=a.opts.onAppletFallback,r=!0,w=!1;a.isAPI=!!a.opts.ck;p.isMettlResourceLoaded=!0;a.$parent.isTestWindow=!1;a.minCommonIndex=2;a.maxIndex=6;a.progressWidth=1;a.index=n?1:2;a.isSystemCheck=a.opts.isSystemCheck||!1;a.startCommonSlider=!1;a.finalWaitingTimer=void 0;a.slideTimer=void 0;a.multiplier=n?19:32;a.isMsbNotRunning=!0;a.isMsbInstalledPage=!0;a.openTestInMSB=function(){try{p.open("mettl://"+H.absUrl(),"_self")}catch(a){c.error("Unable to open in MSB",
a)}};a.downloadMsb=function(){window.location=conf.getSebDownloadUrl();a.isMsbInstalledPage=!1};a.proceedToTest=function(){a.isMsbNotRunning=!1;a.isMsbInstalledPage=!1};a.okay=function(){var b=G.getNextPageAfterDiagnostics(a.isAPI,a.opts);a.isAPI&&g&&a.setAuthenticationDetails();z.go(b)};a.diagnostics={success:!1,failed:!1,tmpl:""};a.trustSrc=function(a){return B.trustAsResourceUrl(a)};a.$watch("startCommonSlider",function(b,c){b&&(a.isSystemCheck?("NONE"==x&&(a.diagnostics.success=!0),m()):d(function(){a.slideCommonSlides()},
100))});a.loadingError=function(b){c.error("error in downloading required files",b);m();a.hideApplet&&a.hideApplet();E.Dialogue.ShowNetworkDisconnectionBeforeST(function(){window.location.reload()})};a.handleDiagError=function(b,e){c.error("Error raised in diagnostics",b);a.diagnostics.failed=!1;d(function(){a.diagnostics.failed=!0},1);m();b&&(a.diagnostics.tmpl=b);e&&(a.softwareName=e,a.errorData=e);a.handleAdvanceDiagError()};a.handleAdvanceDiagError=function(){};a.slideCommonSlides=function(){a.startCommonSlider&&
(a.index!=a.maxIndex&&(1==a.index&&n&&a.index++,a.index++,a.progressWidth=a.multiplier*(n?a.index:a.index-a.minCommonIndex)),a.index==a.maxIndex&&v()?(a.progressWidth=100,a.index=a.maxIndex):a.slideTimer=d(function(){a.slideCommonSlides()},5E3))};a.opts.hasCompletedTest||Q()}])},function(){alert("There seems to be some issue with your network connectivity. Please check your internet connection and then re-launch the test.")});