define2(["services/testErrorHandlerService","services/appletService","services/errorLogService","services/proctoring/proctoringProviderFactory","constants/proctoringConstants"],function(){angular.module("mettl").register.controller("AppletErrorCtrl",["$scope","$window","TestErrorHandlerService","ProctoringProviderFactory","ProctoringConstants","ErrorLogService",function(b,d,g,k,l,h){d=l.AppletMessageType;var c=!1;b.$on(d.CAMERA_UNAVAILABLE,function(d,e){if(!c){c=!0;h.log("Error in taking snap from camera. Candidate ID: "+
b.candidateId,!0);var a=k.getCommunicationProvider();a.hideStream();var f={eventType:"CAMERA_UNAVAILABLE",level:"ERROR",message:"Camera stopped working"};e&&e.permissionRevoked&&(f.message="Camera permission revoked by candidate.");a.logEvents(f);a.shutdownCommunication();g.showCameraProblem()}});b.$on(l.ServerMessageType.SCREEN_FEED_UNAVAILABLE,function(d,e){if(!c){c=!0;h.log("Error in taking screen feed from plugin. Candidate ID: "+b.candidateId,!0);var a=k.getCommunicationProvider();a.hideStream();
var f={eventType:"SCREEN_UNAVAILABLE",level:"ERROR",message:"Screen share stopped working"};e&&e.permissionRevoked&&(f.message="Screen share permission revoked by candidate.");a.logEvents(f);a.shutdownCommunication();g.showScreenFeedProblem()}});b.$on(l.ServerMessageType.SCREEN_MULTIPLE_DETECTED,function(d,e){if(!c){c=!0;h.log("Change in screen feed. Candidate ID: "+b.candidateId,!0);var a=k.getCommunicationProvider();a.hideStream();a.logEvents({eventType:"SCREEN_CHANGED",level:"ERROR",message:"Change in screen feed detected"});
a.shutdownCommunication();g.showMultipleScreenFeedProblem()}});b.$on(d.APPLET_CRASHED,function(){c||(h.log("Error in Applet.Candidate ID: "+b.candidateId,!0),c=!0,g.showAppletProblem())})}])});