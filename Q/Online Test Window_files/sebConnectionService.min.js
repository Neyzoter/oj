define2(["services/testWindowHelperService","services/testWindowTestStateService","services/testWindowConstants"],function(){angular.module("mettl").register.service("SEBConnectionService",["$q","$log","$window","$timeout","$rootScope","$location","TestWindowHelperService","TestWindowConstants","TestWindowTestStateService",function(f,d,l,g,p,q,h,c,m){function k(a){var b=f.defer();g(function(){try{e.send(JSON.stringify(a)),d.log("sent message to SEB WebSocket",JSON.stringify(a)),b.resolve()}catch(r){d.log("error sending in"+
a+"to SEB WebSocket"),b.reject(c.SEB.CheckSEB)}},1);return b.promise}function s(a){switch((a.data||{}).messageType){case c.SEB.MutlipleScreen:var b={type:"SEB",softwareName:"Mutliple Screen",candidateInstanceId:m.candidate.id};h.AJAX({url:c.Url.addCustomEventUrl,data:b,complete:function(){p.$broadcast(c.Events.Test.EndTest,{mode:c.TestFinishMode.SoftwareDetected,data:b})}})}}function t(a){e.onopen=function(){d.log("WebSocket connection with SEB is established");a.resolve()};e.onmessage=function(a){s(a)};
e.onclose=function(a){d.log("webSocket connection with SEB is closed.Doing nothing.",a)};e.onerror=function(b,r){d.log("error occurred in webSocket connection with SEB",JSON.stringify(b));a.reject(c.SEB.CheckSEB)}}function n(){var a=f.defer();g(function(){try{e=new WebSocket("ws://localhost:5000"),t(a)}catch(b){a.reject(c.SEB.CheckSEB)}},1);return a.promise}function u(){var a=f.defer(),b={clientId:m.candidate.clientId,link:c.Url.forceUpdateUrl+encodeURIComponent(q.absUrl(),"UTF-8"),message:c.SEB.OPEN_LINK_DEFAULT_BROWSER};
k(b).then(function(){g(function(){l.location.href="https://tests.mettl.com/msb_exit"},1E3).then(function(){a.resolve()},function(a){d.error("error in sending message to seb web socket "+a.message)})},function(b){d.error("error in sending message to seb web socket "+b.message);l.location.href="https://tests.mettl.com/msb_exit";a.reject()});return a.promise}var e,v=h.Dialogue;return{establishWebSocketConnectionWithSEB:n,establishWebSocketConnectionWithSEBAndSendMessage:function(a){var b=f.defer();g(function(){n().then(function(){k(a).then(function(){b.resolve()},
function(a){b.reject(a)})},function(a){b.reject(a)})},1);return b.promise},closeConnectionWithSEB:function(){var a=f.defer();g(function(){try{e?(e.close(),d.log("WebSocket Connection with seb successfully closed"),a.resolve()):a.reject(c.SEB.CheckSEB)}catch(b){d.log("Error occured while closing websocket connection",b),a.reject(c.SEB.CheckSEB)}},1);return a.promise},sendMessage:k,checkForForceUpdate:function(){var a=f.defer(),b=navigator.userAgent,c=b.lastIndexOf("MSB/"),b=b.substring(c+4).split("."),
d=conf.getMinimumMSBVersionForForceUpdate().split(".");try{-1==c||parseInt(b[0])<parseInt(d[0])?v.ShowAlert({type:h.Dialogue.Type.MSB_FORCE_UPDATE,title:MSB_BROWSER_UPDATE_TEXT,message:MSB_BROWSER_UPDATE_MESSGAE,actions:[MSB_BROWSER_UPDATE],keepAliveOnCallback:!0,callback:u}):a.resolve()}catch(e){a.reject(e)}return a.promise}}}])});