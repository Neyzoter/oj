define2("services/proctoringService services/testWindowTestStateService services/testWindowEnvironmentService services/testWindowHelperService services/diagnosticService services/testWindowConstants services/testWindowCommonUtils services/authorizationDataService services/proctoring/proctoringProviderFactory ../constants/proctoringConstants controllers/appletErrorCtrl services/errorLogService services/proctoring/webrtcProctoringService services/testWindowFactory".split(" "),function(){angular.module("mettl").register.controller("ProctoringCtrl",
["$scope","$log","$controller","$timeout","$injector","ProctoringConstants","TestWindowTestStateService","ProctoringService","TestWindowEnvironmentService","TestWindowTimerService","TestWindowConstants","TestWindowHelperService","DiagnosticService","TestWindowCommonUtils","AuthorizationDataService","ErrorLogService","ProctoringProviderFactory","TestWindowServerUtilsService","WebrtcProctoringService","TestWindowFactory",function(a,f,t,u,c,h,g,k,n,v,p,w,z,A,q,B,l,C,D,x){function r(d){a.onlineAdmins[d.from]&&
a.$apply(function(){delete a.onlineAdmins[d.from]})}function s(d){if(!a.onlineAdmins[d.from]){var b=d.metaData||JSON.parse(d.message).userName,c={},c={from:d.from,name:"Proctor ("+b+")"};a.$apply(function(){a.onlineAdmins[d.from]=c})}}function y(){g.testState.isTestEnding||(g.testState.isTestEnding=!0,w.Dialogue.ShowErrorMessage(TEST_POPUP_EXPIRE_TEST_MESSAGE,function(){k.onTestFinished()},"Test Expire",!1))}a.onlineAdmins={};a.isTestPaused=g.testState.isTestProctorPaused;c=h.AppletMessageType;var e,
m;a.$on(c.ONLINE_USERS,function(d,b){var c=angular.fromJson(b),e=[];angular.forEach(c,function(a){e.push(a.userId)});angular.forEach(c,function(a){s({from:a.userId,metaData:a.userName})});angular.forEach(a.onlineAdmins,function(a,d){-1==$.inArray(d,e)&&r({chatType:"OFFLINE",from:d})})});a.$on(c.ONLINE,function(a,b){s(b)});a.$on(c.OFFLINE,function(a,b){r(b)});a.$on(c.STARTVIDEO,function(d,b){q.isCandidateRunningWebRTC()&&!a.opts.proctoringSettings.recording?(e=l.getCommunicationProvider(),e.startPresenterStream(a.proctoringInstanceId)):
f.log("invalid call to start streaming here.")});a.$on(c.STOPVIDEO,function(d,b){q.isCandidateRunningWebRTC()&&!a.opts.proctoringSettings.recording?m.stopPresenterStreaming(a.proctoringInstanceId):f.log("invalid call to stop streaming here.")});a.$on(c.PAUSE_TEST,function(d,b){n.onProctorPause();e.acknowledgePause(b);a.$apply(function(){a.isTestPaused=!0})});a.$on(c.RESUME_TEST,function(d,b){n.onProctorResume(b);a.$apply(function(){a.isTestPaused=!1})});a.$on(c.WebRTC_RECORDING_URL,function(a,b){var c=
b;try{c=JSON.parse(b).url}catch(f){}e.sendWebRTCRecordingURL(c)});a.$on("proctor.test.resume",function(a,b){e.acknowledgeResume(b)});a.$on(c.SUSPICIOUS_SOFTWARE,function(a,b){k.onStartTestEndProcess("Suspicious Software",{mode:p.TestFinishMode.SoftwareDetected,softwareName:b})});a.$on(c.END_TEST,function(a){f.log("Administrator ended the test");k.onStartTestEndProcess("Force Close",p.TestFinishMode.ProctoredFinish)});a.$on(c.EXPIRE_TEST,function(d){f.log("Test has been expired");a.onlineAdmins={};
y()});a.$on("test.shutdown",function(){f.info("going to shutdown proctoring");a.onlineAdmins={};e.testFinished();m.shutdownProctoring()});a.$on("$destroy",function(){u.cancel(void 0)});a.$on(h.Events.CANDIDATE_BLUR_OUT,function(d,b){"fu"!=a.selectedSection.CurrentItem.DisplayType.toLowerCase()&&(f.info("candidate navigate away from window"),e.informCandidateBlurAway())});a.$on(h.Events.CANDIDATE_BLUR_IN,function(a,b){f.info("candidate came back on test window");e.informCandidateBlurIn()});a.isEmptyObject=
function(a){return _.isEmpty(a)};a.startProctoring=function(c){a.isTestPaused=g.testState.isTestProctorPaused;t("AppletErrorCtrl",{$scope:a});a.uniqueId=c.id;var b=x.test.getMpsCandidateInfo();a.proctoringInstanceId=b.id;a.groupId=b.groupId;b=""+v.GetTestTime();e=l.getCommunicationProvider();m=l.getMediaProvider();e.startTest(c.isTestPaused,!0,b);e.startCandidateProctoring(a.opts.proctoringSettings.recording,a.proctoringInstanceId)}}])});