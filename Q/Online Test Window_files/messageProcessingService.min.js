define2("../constants/proctoringConstants services/testWindowTimerService services/testWindowTestStateService services/deployJavaService services/testWindowTimerService services/diagnosticsConstants services/testWindowCommonUtils services/errorLogService services/testWindowTestStateService services/proctoring/proctoringProviderFactory services/testWindowConstants services/testWindowFactory".split(" "),function(){angular.module("mettl").register.service("MessageProcessingService",["$timeout","$window",
"$log","$rootScope","ProctoringConstants","TestWindowTestStateService","DiagnosticsConstants","TestWindowTimerService","TestWindowCommonUtils","ErrorLogService","TestWindowTestStateService","ProctoringProviderFactory","TestWindowConstants","TestWindowFactory",function(x,d,k,g,l,y,m,t,n,u,v,p,w,e){function c(a,b){g.$broadcast(a,b)}function q(a){switch(a.chatType){case b.ANNOUNCEMENT:case b.MESSAGE:k.log("Message :"+a.message);try{a.message=unescape(a.message)}catch(l){k.log("Exception in un-escaping Applet message :"+
a.message)}c(b.MESSAGE,a);break;case b.APPLET_DESTROYED:break;case b.GET_MSG:q({chatType:b.GET_TESTTIME_LEFT});d.appletMessages=JSON.stringify(d.appletMethodsCallStack);d.appletMethodsCallStack=[];break;case b.DUPLICATE_USER:k.log("got duplicate user entry");g.exceptionValue=f.duplicateUser;g.appletInitialized=!0;c(b.DUPLICATE_USER,"");break;case b.ONLINE_USERS:c(a.chatType,a.message);break;case b.SELF_ONLINE:c(b.SELF_ONLINE,"");break;case b.SELF_OFFLINE:c(b.SELF_OFFLINE,"");break;case b.ONLINE:c(a.chatType,
a);break;case b.OFFLINE:c(a.chatType,a);break;case b.GET_TESTTIME_LEFT:a=""+t.GetTestTime();d.testLeftDuration=a;break;case b.GET_WEBRTC_SNAP:p.getMediaProvider().captureWebcamImage().then(function(a){d.webRTCSnap=a});break;case b.GET_WEBRTC_WEBCAM_INFO:d.webRTCWebcamInfo=JSON.stringify(p.getMediaProvider().getWebcamInfo());break;case b.EXPIRE_TEST:c(a.chatType);break;case b.END_TEST:c(a.chatType);break;case b.PAUSE_TEST:c(a.chatType,a.from);n.syncParent("testPause",{});break;case b.RESUME_TEST:n.syncParent("testResume",
{});c(a.chatType,a.from);break;case b.CHECK_CHROME_PLUGIN:c(a.chatType);break;case b.SUSPICIOUS_SOFTWARE:h(f.suspiciousSoftware,a.message);c(a.chatType,a.message);break;case b.CAMERA_UNAVAILABLE:c(a.chatType,a.message);h(f.webCamError);break;case b.CANDIDATE_AUTH_PROCESSED:c(a.chatType,a);break;case b.STREAMING_SERVER_ERROR:h(f.streamingServer);break;case b.CHAT_SERVER_ERROR:h(f.chatServer);break;case b.LOAD_SUCCESS:c(a.chatType,a.message);break;case b.DIAGNOSTICS_SUCCESS:case b.STREAMING_FOR_IMAGE_READY:case b.SHOW_FACE_IMAGE:case b.SHOW_ID_IMAGE:case b.REGISTRATION_FIELD_ACK:case b.PENDING_AUTHORIZATION_COUNT:c(a.chatType,
a.message);break;case b.APPLET_CRASHED:c(b.APPLET_CRASHED);break;case b.AVAILABLE_CAMERAS:h(f.multipleWebCam);c(b.AVAILABLE_CAMERAS,a.message);break;case b.RECORDING_URL:case b.WebRTC_RECORDING_URL:case b.STARTVIDEO:case b.STOPVIDEO:c(a.chatType,a.message);break;case b.LOG:var r=v.candidate.id,s=a.message||"",m={logEvent:a.logEvent,msg:s,ciid:r};g.$emit(w.Events.GA,{category:"PROCTORING_EVENTS",action:a.logEvent,data:{clientID:cn.neyzoter.test.getClientId(),clientName:cn.neyzoter.test.getCompanyName(),scheduleKey:cn.neyzoter.test.getInvitationKey(),
candidateEmail:cn.neyzoter.test.getCandidateEmail()||"",ciid:r,browserName:cn.neyzoter.test.getBrowserName(),browserVersion:cn.neyzoter.test.getBrowserVersion(),osName:cn.neyzoter.test.getOsName(),osBit:cn.neyzoter.test.getOsBit(),msg:s}});u.log(JSON.stringify(m),!0,!0);break;default:k.log("unhandled message,",a),c(a.chatType,a.message)}}function h(a, b){c(l.Events.DIAGNOSTICS_ERROR,{errorType:a,data:b})}var b=l.AppletMessageType;d.blockedSoftwares="";g.onlineUsers={};var f=m.exceptionIndex;return{processMessage:q,setBlockedSoftares:function(a){d.blockedSoftwares=
a}}}])});