define2(["services/testWindowConstants"],function(){angular.module("mettl").register.directive("paginationFilter",["$rootScope","$window","$timeout","TestWindowConstants",function(s,p,l,e){function q(a){var f="All";switch(a){case "f":f="Revisit";break;case "a":f="Attempted";break;case "u":f="UnAttempted"}return f}return{restrict:"AE",templateUrl:"/partials/paginationFilter",link:function(a,f,m){function n(d,b,c){a[d]=angular.element(f.find("._pagination-buttons")).width()-angular.element(f.find("._all-button")).outerWidth();
a[b]=0;a[c]=0}function h(){var d=angular.element(f.find("._pagination-buttons")).width()-6,b=angular.element(f.find("._all-button")).outerWidth(),d=(d-b)/k.length;if(k.length==a.revisitedCount)n("revisitedCountWidth","attemptedCountWidth","unAttemptedCountWidth");else if(k.length==a.attemptedCount)n("attemptedCountWidth","revisitedCountWidth","unAttemptedCountWidth");else if(k.length==a.unAttemptedCount)n("unAttemptedCountWidth","attemptedCountWidth","revisitedCountWidth");else{var b=d*a.revisitedCount,
c=d*a.attemptedCount,g=d*a.unAttemptedCount,d=0;55>=b&&0<b&&(d+=55-b,b=55);55>=c&&0<c&&(d+=55-c,c=55);55>=g&&0<g&&(d+=55-g,g=55);a.revisitedCountWidth=b;a.unAttemptedCountWidth=g;a.attemptedCountWidth=c;for(var b=[b,c,g],c=b[0],g=0,e=1;e<b.length;e++)b[e]>c&&(g=e,c=b[e]);switch(g){case 0:a.revisitedCountWidth-=d;break;case 1:a.attemptedCountWidth-=d;break;case 2:a.unAttemptedCountWidth-=d}}}if(a.section){a.attemptedCount=0;a.revisitedCount=0;a.unAttemptedCount=0;var k=a.section.Items;for(m=0;m<k.length;m++){var r=
k[m];r.IsFlagged?a.revisitedCount++:r.IsAttempted?a.attemptedCount++:a.unAttemptedCount++}a.width=p.innerWidth;angular.element(p).bind("resize",function(){h();a.$digest()});l(h,100);a.totalQuestions=k.length;a.currentFilter="all";a.currentFilterName="All";a.activeItem="all";a.changeFilter=function(a,b){var c=q(a);s.$broadcast(e.Events.Pagination.FilterChanges,{category:"questionFilterRR",action:c,data:{},type:a});l(h,100)};a.$on(e.Events.Pagination.AcknowledgeFilterChange,function(d,b){var c=q(b.type);
a.currentFilter=b.type;a.currentFilterName=c;a.section.IsMultipleQuestions&&("All"==c?angular.element("._question").removeClass("hide"):(angular.element("._question").addClass("hide"),angular.element("._question."+c+"").removeClass("hide")),c=angular.element("._question")[0].offsetTop-200,$("html, body").stop().animate({scrollTop:c},500))});a.showQuestionForSM=function(d){a.$broadcast(e.Events.Carousel.ToggleCarousel);d.stopPropagation();return!1};a.$on(e.Events.Question.QuestionFlagged,function(d,
b){var c=b.item;c.IsFlagged&&c.IsAttempted?(a.attemptedCount--,a.revisitedCount++):c.IsFlagged?(a.unAttemptedCount--,a.revisitedCount++):(c.IsAttempted?a.attemptedCount++:a.unAttemptedCount++,a.revisitedCount--);h()});a.$on(e.Events.Test.GoToQuestion,function(){l(h,100)});a.$on(e.Events.Question.QuestionClicked,function(){l(h,100)});a.$on(e.Events.Question.QuestionAttempted,function(d,b){b.IsFlagged||(b.IsAttempted?(a.unAttemptedCount--,a.attemptedCount++):(a.unAttemptedCount++,a.attemptedCount--));
h()})}}}}])});